//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package common

import (
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EvaluatorSpec) DeepCopyInto(out *EvaluatorSpec) {
	*out = *in
	if in.PartitionProviderRef != nil {
		in, out := &in.PartitionProviderRef, &out.PartitionProviderRef
		*out = new(v1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EvaluatorSpec.
func (in *EvaluatorSpec) DeepCopy() *EvaluatorSpec {
	if in == nil {
		return nil
	}
	out := new(EvaluatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadIndex) DeepCopyInto(out *LoadIndex) {
	*out = *in
	in.Shard.DeepCopyInto(&out.Shard)
	out.Value = in.Value.DeepCopy()
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadIndex.
func (in *LoadIndex) DeepCopy() *LoadIndex {
	if in == nil {
		return nil
	}
	out := new(LoadIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadIndexProviderStatus) DeepCopyInto(out *LoadIndexProviderStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]LoadIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadIndexProviderStatus.
func (in *LoadIndexProviderStatus) DeepCopy() *LoadIndexProviderStatus {
	if in == nil {
		return nil
	}
	out := new(LoadIndexProviderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadIndexerSpec) DeepCopyInto(out *LoadIndexerSpec) {
	*out = *in
	if in.MetricValuesProviderRef != nil {
		in, out := &in.MetricValuesProviderRef, &out.MetricValuesProviderRef
		*out = new(v1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadIndexerSpec.
func (in *LoadIndexerSpec) DeepCopy() *LoadIndexerSpec {
	if in == nil {
		return nil
	}
	out := new(LoadIndexerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in LoadIndexesDesc) DeepCopyInto(out *LoadIndexesDesc) {
	{
		in := &in
		*out = make(LoadIndexesDesc, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadIndexesDesc.
func (in LoadIndexesDesc) DeepCopy() LoadIndexesDesc {
	if in == nil {
		return nil
	}
	out := new(LoadIndexesDesc)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricValue) DeepCopyInto(out *MetricValue) {
	*out = *in
	in.Shard.DeepCopyInto(&out.Shard)
	out.Value = in.Value.DeepCopy()
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricValue.
func (in *MetricValue) DeepCopy() *MetricValue {
	if in == nil {
		return nil
	}
	out := new(MetricValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricValuesProviderStatus) DeepCopyInto(out *MetricValuesProviderStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]MetricValue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricValuesProviderStatus.
func (in *MetricValuesProviderStatus) DeepCopy() *MetricValuesProviderStatus {
	if in == nil {
		return nil
	}
	out := new(MetricValuesProviderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NormalizerSpec) DeepCopyInto(out *NormalizerSpec) {
	*out = *in
	if in.MetricValuesProviderRef != nil {
		in, out := &in.MetricValuesProviderRef, &out.MetricValuesProviderRef
		*out = new(v1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NormalizerSpec.
func (in *NormalizerSpec) DeepCopy() *NormalizerSpec {
	if in == nil {
		return nil
	}
	out := new(NormalizerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionProviderStatus) DeepCopyInto(out *PartitionProviderStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = make(ReplicaList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionProviderStatus.
func (in *PartitionProviderStatus) DeepCopy() *PartitionProviderStatus {
	if in == nil {
		return nil
	}
	out := new(PartitionProviderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionerSpec) DeepCopyInto(out *PartitionerSpec) {
	*out = *in
	if in.LoadIndexProviderRef != nil {
		in, out := &in.LoadIndexProviderRef, &out.LoadIndexProviderRef
		*out = new(v1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionerSpec.
func (in *PartitionerSpec) DeepCopy() *PartitionerSpec {
	if in == nil {
		return nil
	}
	out := new(PartitionerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PollerSpec) DeepCopyInto(out *PollerSpec) {
	*out = *in
	if in.ShardManagerRef != nil {
		in, out := &in.ShardManagerRef, &out.ShardManagerRef
		*out = new(v1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PollerSpec.
func (in *PollerSpec) DeepCopy() *PollerSpec {
	if in == nil {
		return nil
	}
	out := new(PollerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Replica) DeepCopyInto(out *Replica) {
	*out = *in
	if in.LoadIndexes != nil {
		in, out := &in.LoadIndexes, &out.LoadIndexes
		*out = make([]LoadIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.TotalLoad = in.TotalLoad.DeepCopy()
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Replica.
func (in *Replica) DeepCopy() *Replica {
	if in == nil {
		return nil
	}
	out := new(Replica)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in ReplicaList) DeepCopyInto(out *ReplicaList) {
	{
		in := &in
		*out = make(ReplicaList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaList.
func (in ReplicaList) DeepCopy() ReplicaList {
	if in == nil {
		return nil
	}
	out := new(ReplicaList)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalerSpec) DeepCopyInto(out *ScalerSpec) {
	*out = *in
	if in.PartitionProviderRef != nil {
		in, out := &in.PartitionProviderRef, &out.PartitionProviderRef
		*out = new(v1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
	if in.ShardManagerRef != nil {
		in, out := &in.ShardManagerRef, &out.ShardManagerRef
		*out = new(v1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplicaSetControllerRef != nil {
		in, out := &in.ReplicaSetControllerRef, &out.ReplicaSetControllerRef
		*out = new(v1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalerSpec.
func (in *ScalerSpec) DeepCopy() *ScalerSpec {
	if in == nil {
		return nil
	}
	out := new(ScalerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Shard) DeepCopyInto(out *Shard) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Shard.
func (in *Shard) DeepCopy() *Shard {
	if in == nil {
		return nil
	}
	out := new(Shard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardManagerSpec) DeepCopyInto(out *ShardManagerSpec) {
	*out = *in
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = make(ReplicaList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardManagerSpec.
func (in *ShardManagerSpec) DeepCopy() *ShardManagerSpec {
	if in == nil {
		return nil
	}
	out := new(ShardManagerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardManagerStatus) DeepCopyInto(out *ShardManagerStatus) {
	*out = *in
	in.ShardsProviderStatus.DeepCopyInto(&out.ShardsProviderStatus)
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = make(ReplicaList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardManagerStatus.
func (in *ShardManagerStatus) DeepCopy() *ShardManagerStatus {
	if in == nil {
		return nil
	}
	out := new(ShardManagerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardsProviderStatus) DeepCopyInto(out *ShardsProviderStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]Shard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardsProviderStatus.
func (in *ShardsProviderStatus) DeepCopy() *ShardsProviderStatus {
	if in == nil {
		return nil
	}
	out := new(ShardsProviderStatus)
	in.DeepCopyInto(out)
	return out
}
